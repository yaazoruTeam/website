services:
  backend:
    image: yaazoru/backend:latest
    container_name: yaazoru-backend-prod
    ports:
      - "3006:3006"
    env_file:
      - .env
    environment:
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      NODE_ENV: production
    command: sh -c "npm install && npm run start"
    depends_on:
      - db
    networks:
      - yaazoru-internal

  frontend:
    image: yaazoru/frontend:latest
    container_name: react-frontend-nginx
    working_dir: /app
    ports:
      - "80:80"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - VITE_BASE_URL=${VITE_BASE_URL:-/}
      - VITE_LIMIT=${VITE_LIMIT}
    networks:
      - yaazoru-internal
  db:
    image: postgres:15-alpine
    container_name: yaazoru-postgres-db
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - yaazoru-internal

  datadog-agent:
    image: gcr.io/datadoghq/agent:7
    container_name: dd-agent
    environment:
      DD_API_KEY: ${DD_API_KEY}
      DD_SITE: ${DD_SITE}
      DD_DOGSTATSD_NON_LOCAL_TRAFFIC: ${DD_DOGSTATSD_NON_LOCAL_TRAFFIC}
      DD_APM_ENABLED: ${DD_APM_ENABLED}
      DD_APM_NON_LOCAL_TRAFFIC: ${DD_APM_NON_LOCAL_TRAFFIC}
      DD_APM_RECEIVER_SOCKET: ${DD_APM_RECEIVER_SOCKET}
      DD_DOGSTATSD_SOCKET: ${DD_DOGSTATSD_SOCKET}
    volumes:
      - /var/run/datadog:/var/run/datadog
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    networks:
      - yaazoru-internal
    # restart: unless-stopped

volumes:
  db-data:
networks:
  yaazoru-internal:
    driver: bridge