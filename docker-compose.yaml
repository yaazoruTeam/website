services:
  backend:
    image: node:20
    container_name: node-backend
    working_dir: /app
    volumes:
      - ./lib/backend/src:/app/src
      - ./lib/backend/package.json:/app/package.json
      - ./lib/backend/tsconfig.json:/app/tsconfig.json
      - ./lib/backend/.env:/app/.env
      - C:/dev/yaazoru/lib:/app/lib
      - /app/node_modules
    ports:
      - "3006:3006"
    command: sh -c "npm install && npm run build-schema && PORT=3006 npm run dev"
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - POSTGRES_DB=postgres
      - DB_HOST=host.docker.internal
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_NAME=${DB_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - GOOGLE_APPLICATION_CREDENTIALS_JSON=${GOOGLE_APPLICATION_CREDENTIALS_JSON}
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@database:${DB_PORT}/${DB_NAME}
      - BRAND_TOKEN=${BRAND_TOKEN}
      - BRAND_ID=${BRAND_ID}
      - ACCOUNT_TOKEN=${ACCOUNT_TOKEN}
      - AUTH_ID=${AUTH_ID}
      - ACCOUNT_ACTION=${ACCOUNT_ACTION}
      - LIMIT=${LIMIT}
    # depends_on:
    #   - database
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - yaazoru-internal
  frontend:
    build:
      context: ./lib/frontend
      dockerfile: Dockerfile
    image: yaazoru-frontend:latest
    container_name: react-frontend-nginx
    working_dir: /app
    volumes:
      - ./lib/frontend/public:/app/public
      - ./lib/frontend/src:/app/src
      - ./lib/frontend/package.json:/app/package.json
      - ./lib/frontend/tsconfig.json:/app/tsconfig.json
    ports:
      - "80:80"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
    networks:
      - yaazoru-internal
  database:
    image: postgres:15
    container_name: postgres-db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - yaazoru-internal
volumes:
  db-data:
networks:
  yaazoru-internal:
    driver: bridge
